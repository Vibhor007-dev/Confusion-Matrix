# -*- coding: utf-8 -*-
"""c117.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18izXjybMVlxg5gJNr78mYz-AXivalNj_
"""

from google.colab import files
data_to_load=files.upload()

import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
import numpy as np
from sklearn.metrics import confusion_matrix
import seaborn as sns
import matplotlib.pyplot as plt

df=pd.read_csv("BankNote_Authentication.csv")
print(df.head())

factors=df[["variance","skewness","curtosis","entropy","class"]]
heart_attack=df["class"]

factors_train,factors_test,heart_attack_train,heart_attack_test=train_test_split(factors,heart_attack,test_size=0.25,random_state=0)
sc_x=StandardScaler()
factors_train=sc_x.fit_transform(factors_train)
factors_test=sc_x.fit_transform(factors_test)
classifier=LogisticRegression(random_state=0)
classifier.fit(factors_train,heart_attack_train)

heart_attack_prediction=classifier.predict(factors_test)
predicted_values=[]

for i in heart_attack_prediction:
  if i==0:
    predicted_values.append("Authorised")
  else:
    predicted_values.append("Forged")

actual_values=[]

for i in heart_attack_test.ravel():
  if i==0:
    actual_values.append("Authorised")
  else:
    actual_values.append("Forged")
labels = ["Authorised", "Forged"] 
cm = confusion_matrix(actual_values, predicted_values, labels)

ax=plt.subplot()
sns.heatmap(cm,annot=True,ax=ax)
ax.set_xlabel("Predicted")
ax.set_ylabel("Actual")
ax.set_title("Confusion Matrix")

ax.xaxis.set_ticklabels(labels);ax.yaxis.set_ticklabels(labels)